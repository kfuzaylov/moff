{"version":3,"names":[],"mappings":"","sources":["moff.js"],"sourcesContent":["/**\n * @overview  moff - Mobile First Framework\n * @author    Kadir A. Fuzaylov <kfuzaylov@dealersocket.com>\n * @version   1.6.27\n * @license   Licensed under MIT license\n * @copyright Copyright (c) 2015 Kadir A. Fuzaylov\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Moff AMD component\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction AMD() {\n\n\t/**\n  * @property {AMD} _amd - Link to AMD object.\n  * @private\n  */\n\tvar _amd = this;\n\n\t/**\n  * @property {window} _win - Link to window object.\n  * @private\n  */\n\tvar _win = window;\n\n\t/**\n  * @property {HTMLDocument} _doc - Local link to document object.\n  * @private\n  */\n\tvar _doc = _win.document;\n\n\t/**\n  * @property {{}} _registeredFiles - Object to register files to be loaded.\n  * @private\n  */\n\tvar _registeredFiles = {};\n\n\t/**\n  * @property {Array} _deferredObjects - Deferred files.\n  * @private\n  */\n\tvar _deferredObjects = [];\n\n\t/**\n  * @property {boolean} _windowIsLoaded - Flag to determine whether the window is loaded.\n  * @private\n  */\n\tvar _windowIsLoaded = false;\n\n\t/**\n  * Window load event handler.\n  * @function windowLoadHandler\n  */\n\tfunction windowLoadHandler() {\n\t\t_windowIsLoaded = true;\n\n\t\t// Load deferred files.\n\t\t// These files included with Moff.amd.include method before window load event.\n\t\tMoff.each(_deferredObjects, function (i, obj) {\n\t\t\t_amd.include(obj.id, obj.callback);\n\t\t});\n\t}\n\n\t/**\n  * Handle elements event.\n  * @function handleEvents\n  */\n\tfunction handleEvents() {\n\t\t_win.addEventListener('load', windowLoadHandler, false);\n\t}\n\n\t/**\n  * Check url hash tag to load registered files.\n  * @function includeRegister\n  */\n\tfunction includeRegister() {\n\t\tMoff.each(_registeredFiles, function (id, object) {\n\t\t\t// Don't load register if it is used in data-load-module attribute,\n\t\t\t// because it will be included after content of element be loaded.\n\t\t\tif (object.loadOnScreen.length && object.loadOnScreen.indexOf(Moff.getMode()) !== -1 && !_doc.querySelectorAll('[data-load-module=\"' + id + '\"]').length) {\n\t\t\t\t_amd.include(id);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n  * Register files to be loaded files.\n  * @method register\n  * @param {object} obj - Registered object\n  */\n\tthis.register = function (obj) {\n\t\t// Normalize obj properties\n\t\t_registeredFiles[obj.id] = {\n\t\t\tloaded: false,\n\t\t\tdepend: {\n\t\t\t\tjs: obj.depend && obj.depend.js || [],\n\t\t\t\tcss: obj.depend && obj.depend.css || []\n\t\t\t},\n\t\t\tfile: {\n\t\t\t\tjs: obj.file && obj.file.js || [],\n\t\t\t\tcss: obj.file && obj.file.css || []\n\t\t\t},\n\t\t\tloadOnScreen: obj.loadOnScreen || [],\n\t\t\tbeforeInclude: obj.beforeInclude || undefined,\n\t\t\tafterInclude: obj.afterInclude || undefined,\n\t\t\tonWindowLoad: obj.onWindowLoad || false\n\t\t};\n\t};\n\n\t/**\n  * Load registered files by identifier.\n  * @method include\n  * @param {string} id - Included object id\n  * @param {function} [callback] - Function callback\n  */\n\tthis.include = function (id, callback) {\n\t\tvar register = _registeredFiles[id];\n\n\t\t// Make sure files are not loaded\n\t\tif (register.loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure to load after window load if onWindowLoad is true\n\t\tif (register.onWindowLoad && !_windowIsLoaded) {\n\t\t\t// Save id to load after window load\n\t\t\t_deferredObjects.push({ id: id, callback: callback });\n\t\t\treturn;\n\t\t}\n\n\t\t// Mark as loaded\n\t\tregister.loaded = true;\n\n\t\tif (typeof register.beforeInclude === 'function') {\n\t\t\tregister.beforeInclude();\n\t\t}\n\n\t\tfunction loadFiles() {\n\t\t\tMoff.loadAssets(register.file, execCallback);\n\t\t}\n\n\t\tMoff.loadAssets(register.depend, loadFiles);\n\n\t\tfunction execCallback() {\n\t\t\tif (typeof register.afterInclude === 'function') {\n\t\t\t\tregister.afterInclude();\n\t\t\t}\n\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\tMoff.$(function () {\n\t\thandleEvents();\n\t\tincludeRegister();\n\t});\n\n\t/* Test-code */\n\tthis._testonly = {\n\t\t_deferredObjects: _deferredObjects,\n\t\t_registeredFiles: _registeredFiles\n\t};\n\t/* End-test-code */\n}\n\nexports['default'] = AMD;\nmodule.exports = exports['default'];\n\n},{}],2:[function(require,module,exports){\n/**\n * Moff class\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction Core() {\n\n\t/**\n  * @property {window} _win - Link to window object.\n  * @private\n  */\n\tvar _win = window;\n\n\t/**\n  * @property {Core} _moff - Link to Core object\n  * @private\n  */\n\tvar _moff = this;\n\n\t/**\n  * @property {HTMLDocument} _doc - Local link to document object.\n  * @private\n  */\n\tvar _doc = _win.document;\n\n\t/**\n  * @property {boolean} _matchMediaSupport - Match media support and link.\n  * @private\n  */\n\tvar _matchMediaSupport = !!(_win.matchMedia && _win.matchMedia('screen').addListener);\n\n\t/**\n  * @property {boolean|Window.matchMedia|*} _matchMedia - Short link to matchMedia.\n  * @private\n  */\n\tvar _matchMedia = _matchMediaSupport && _win.matchMedia;\n\n\t/**\n  * @property {string} _mqSmall - Media query breakpoint conditions.\n  * @private\n  */\n\tvar _mqSmall = '(min-width: %dpx)';\n\n\t/**\n  * @type {string} _mqMedium - Link to _mqSmall\n  * @private\n  */\n\tvar _mqMedium = _mqSmall;\n\n\t/**\n  * @type {string} _mqLarge - Link to _mqSmall\n  * @private\n  */\n\tvar _mqLarge = _mqSmall;\n\n\t/**\n  * @property {string} _lastViewMode - List name of device screen mode\n  * @private\n  */\n\tvar _lastViewMode;\n\n\t/**\n  * @property {Array} _changeViewCallbacks - Array of callbacks to trigger on view change.\n  * @private\n  */\n\tvar _changeViewCallbacks = [];\n\n\t/**\n  * @property {Array} _domLoadedCallbacks - Array of callbacks to trigger on DOMContentLoaded event.\n  * @private\n  */\n\tvar _domLoadedCallbacks = [];\n\n\t/**\n  * @property {boolean} _domIsLoaded - Flag to determine whether the DOM is loaded.\n  * @private\n  */\n\tvar _domIsLoaded = false;\n\n\t/**\n  * @property {Array} _beforeLoad - Run these callbacks before content loading.\n  * @private\n  */\n\tvar _beforeLoad = [];\n\n\t/**\n  * @property {Array} _afterLoad - Run these callbacks after content is loaded.\n  * @private\n  */\n\tvar _afterLoad = [];\n\n\t/**\n  * @property {{}} _cache - Preloaded data cache\n  * @private\n  */\n\tvar _cache = {};\n\n\t/**\n  * @property {object} _settings - Local default settings.\n  * @private\n  */\n\tvar _settings = {\n\t\tbreakpoints: {\n\t\t\tsm: 768,\n\t\t\tmd: 992,\n\t\t\tlg: 1200\n\t\t},\n\n\t\tloadOnHover: true,\n\t\tcacheLiveTime: 2000\n\t};\n\n\t/**\n  * @property {string} _dataEvent - Data load event selector.\n  * @private\n  */\n\tvar _dataEvent = 'data-load-target';\n\n\t/**\n  * @property {{}} _historyData - History data store.\n  * @private\n  */\n\tvar _historyData = {};\n\n\t/**\n  * Handle elements event.\n  * @function handleEvents\n  */\n\tfunction handleEvents() {\n\t\t// Check for addListener method\n\t\t// because respond.js emulates matchMedia method\n\t\tif (_matchMediaSupport) {\n\t\t\t_matchMedia(_mqLarge).addListener(resizeHandler);\n\t\t\t_matchMedia(_mqMedium).addListener(resizeHandler);\n\t\t\t_matchMedia(_mqSmall).addListener(resizeHandler);\n\t\t} else {\n\t\t\t// If matchMedia is not supported use resize fallback\n\t\t\t_win.addEventListener('resize', resizeHandler, false);\n\t\t}\n\n\t\t_win.addEventListener('popstate', handlePopstate, false);\n\t\t_moff.handleDataEvents();\n\t}\n\n\t/**\n  * Window resize or matchMedia event listener handler.\n  * @function resizeHandler\n  * @param {object} mql - MediaQueryList object\n  */\n\tfunction resizeHandler(mql) {\n\t\tif (_matchMediaSupport && mql.matches || viewModeIsChanged()) {\n\t\t\tsetViewMode();\n\n\t\t\t_moff.runCallbacks(_changeViewCallbacks, _moff, [_moff.getMode()]);\n\t\t\t_moff.handleDataEvents();\n\t\t}\n\t}\n\n\t/**\n  * Handle load events.\n  * @method handleDataEvents\n  */\n\tthis.handleDataEvents = function () {\n\t\tloadByScreenSize();\n\n\t\t_moff.each(_doc.querySelectorAll('[' + _dataEvent + ']'), function () {\n\t\t\tvar element = this;\n\n\t\t\tif (element.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = (element.getAttribute('data-load-event') || 'click').toLowerCase();\n\n\t\t\tif (event === 'dom') {\n\t\t\t\t_moff.$(function () {\n\t\t\t\t\thandleLink(element);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (event === 'click' && _settings.loadOnHover && !_moff.detect.isMobile) {\n\t\t\t\t\telement.addEventListener('mouseenter', function () {\n\t\t\t\t\t\telement = this;\n\t\t\t\t\t\tvar url = element.href || element.getAttribute('data-load-url');\n\t\t\t\t\t\turl = removeHash(url);\n\n\t\t\t\t\t\tif (url) {\n\t\t\t\t\t\t\turl = handleUrlTemplate(element, url);\n\n\t\t\t\t\t\t\tload(url, function (data) {\n\t\t\t\t\t\t\t\t_cache[url] = data;\n\n\t\t\t\t\t\t\t\t// Clear cache each n seconds to prevent memory leak.\n\t\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\t\tdelete _cache[url];\n\t\t\t\t\t\t\t\t}, _settings.cacheLiveTime);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\n\t\t\t\telement.addEventListener(event, function (event) {\n\t\t\t\t\thandleLink(this);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t\telement.handled = true;\n\t\t});\n\t};\n\n\t/**\n  * Check element for data load screen.\n  * @function checkDataScreen\n  * @param {object} element - HTML element\n  * @returns {boolean} Return true if no data load screen\n  */\n\tfunction checkDataScreen(element) {\n\t\tvar screen = element.getAttribute('data-load-screen');\n\t\tvar modes = screen.split(' ');\n\t\treturn screen ? modes.length && modes.indexOf(_moff.getMode()) !== -1 : true;\n\t}\n\n\t/**\n  * Extend Core settings\n  * @function extendSettings\n  */\n\tfunction extendSettings() {\n\t\tvar settings = readSettings();\n\n\t\t_moff.each(settings, function (property, value) {\n\t\t\t_settings[property] = value;\n\t\t});\n\t}\n\n\t/**\n  * Setup breakpoints for Media Queries.\n  * @function setBreakpoints\n  */\n\tfunction setBreakpoints() {\n\t\tif (_settings.breakpoints && _matchMediaSupport) {\n\t\t\tvar breakpoints = _settings.breakpoints;\n\t\t\t_mqSmall = _mqSmall.replace('%d', breakpoints.sm);\n\t\t\t_mqMedium = _mqMedium.replace('%d', breakpoints.md);\n\t\t\t_mqLarge = _mqLarge.replace('%d', breakpoints.lg);\n\t\t}\n\t}\n\n\t/**\n  * Determine whether view mode is changed\n  * @function viewModeIsChanged\n  * @returns {boolean}\n  */\n\tfunction viewModeIsChanged() {\n\t\treturn _lastViewMode !== _moff.getMode();\n\t}\n\n\t/**\n  * Change last view mode.\n  * @function setViewMode\n  */\n\tfunction setViewMode() {\n\t\t_lastViewMode = _moff.getMode();\n\t}\n\n\t/**\n  * Load data.\n  * @param {string} url - Load url\n  * @param {function} callback - Callback on success\n  */\n\tfunction load(url, callback) {\n\t\t_moff.ajax({\n\t\t\turl: url,\n\t\t\ttype: 'GET',\n\t\t\tsuccess: function success(data) {\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback(data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n  * Links click event handler.\n  * @function handleLink\n  * @param {object} element - DOM element\n  * @returns {boolean} false\n  */\n\tfunction handleLink(element) {\n\t\tvar title = element.title || '';\n\t\tvar url = element.href || element.getAttribute('data-load-url');\n\t\tvar target = element.getAttribute('data-load-target');\n\t\tvar push = element.getAttribute('data-push-url');\n\t\tvar loadModule = element.getAttribute('data-load-module');\n\n\t\tif (url) {\n\t\t\turl = handleUrlTemplate(element, url);\n\t\t\t// Remove data attributes not to handle twice\n\t\t\telement.removeAttribute('data-load-event');\n\t\t\t_moff.runCallbacks(_beforeLoad, element);\n\n\t\t\tif (_moff.detect.history && push) {\n\t\t\t\tvar id = Date.now();\n\t\t\t\t_win.history.pushState({ elemId: id, url: url }, title, url);\n\t\t\t\t_historyData[id] = element;\n\t\t\t}\n\n\t\t\tloadContent(element, url, target, function () {\n\t\t\t\t// If element has data-load-module attribute\n\t\t\t\t// include this module and then run after load callbacks.\n\t\t\t\tif (loadModule) {\n\t\t\t\t\t_moff.amd.include(loadModule, function () {\n\t\t\t\t\t\t_moff.runCallbacks(_afterLoad, element);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t_moff.runCallbacks(_afterLoad, element);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n  * Handle url for templates.\n  * @function handleUrlTemplate\n  * @param {object} element - DOM element\n  * @param {string} url - Handled url\n  * @returns {string} handled url\n  */\n\tfunction handleUrlTemplate(element, url) {\n\t\treturn url.replace(/\\{\\{(.*?)\\}\\}/g, function () {\n\t\t\treturn element.getAttribute(arguments[1]);\n\t\t});\n\t}\n\n\t/**\n  * Load content and append into target.\n  * @function loadContent\n  * @param {object} element - DOM element\n  * @param {string} url - Content URL\n  * @param {string} target - Target element selector\n  * @param {function} callback\n  */\n\tfunction loadContent(element, url, target, callback) {\n\t\turl = removeHash(url);\n\n\t\tfunction applyContent(html) {\n\t\t\tvar title = element.getAttribute('data-page-title');\n\t\t\t_doc.querySelector(target).innerHTML = html;\n\n\t\t\tif (title) {\n\t\t\t\t_doc.title = title;\n\t\t\t}\n\n\t\t\t// Handle events of new added elements\n\t\t\t_moff.handleDataEvents();\n\t\t\tcallback();\n\t\t}\n\n\t\t// If data is cached load it from cache\n\t\tif (_cache[url]) {\n\t\t\tapplyContent(_cache[url]);\n\t\t} else {\n\t\t\tload(url, applyContent);\n\t\t}\n\t}\n\n\t/**\n  * Window popstate event handler.\n  * @function handlePopstate\n  * @param {object} event - Event object\n  */\n\tfunction handlePopstate(event) {\n\t\tvar state = event.state;\n\t\tvar element = _historyData[state.elemId];\n\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (element) {\n\t\t\tif (!checkDataScreen(element)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar url = state.url;\n\t\t\tvar target = element.getAttribute('data-load-target');\n\n\t\t\t_moff.runCallbacks(_beforeLoad, element);\n\t\t\tloadContent(element, url, target, function () {\n\t\t\t\t_moff.runCallbacks(_afterLoad, element);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n  * Remove hash tag from URL.\n  * @function removeHash\n  * @param {string} url\n  * @returns {string} URL w/o hash tag\n  */\n\tfunction removeHash(url) {\n\t\tvar index = url.indexOf('#');\n\t\treturn index === -1 ? url : url.substr(0, index);\n\t}\n\n\t/**\n  * Loads content of elements if data-load-screen set.\n  * @function loadByScreenSize\n  */\n\tfunction loadByScreenSize() {\n\t\tvar screenAttribute = 'data-load-screen';\n\n\t\t_moff.each(_doc.querySelectorAll('[' + screenAttribute + ']'), function () {\n\t\t\tvar element = this;\n\n\t\t\tif (checkDataScreen(element)) {\n\t\t\t\telement.removeAttribute(screenAttribute);\n\t\t\t\thandleLink(element);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction nodeList(node) {\n\t\tvar type = Object.prototype.toString.call(node);\n\n\t\treturn typeof /^\\[object (HTMLCollection|NodeList)\\]$/.test(type) && node.hasOwnProperty('length') && (node.length === 0 || typeof node[0] === 'object' && node[0].nodeType > 0);\n\t}\n\n\t/**\n  * Gets Moff settings\n  * @function readSettings\n  * @returns {{}}\n  */\n\tfunction readSettings() {\n\t\treturn window.moffConfig || {};\n\t}\n\n\t/**\n  * Initialize Moff\n  * @function init\n  */\n\tfunction init() {\n\t\t_domIsLoaded = true;\n\t\textendSettings();\n\t\tsetBreakpoints();\n\t\tsetViewMode();\n\t\thandleEvents();\n\t\t_moff.runCallbacks(_domLoadedCallbacks, this);\n\t}\n\n\t/**\n  * Sends ajax request.\n  * @method ajax\n  * @param options\n  */\n\tthis.ajax = function (options) {\n\t\tvar params = [];\n\t\tvar data;\n\n\t\t// Make type upper case\n\t\toptions.type = options.type.toUpperCase();\n\n\t\t// Set data object to send them as POST or GET params\n\t\tif (typeof options.data === 'object') {\n\t\t\tdata = options.data;\n\n\t\t\tthis.each(data, function (key, value) {\n\t\t\t\tparams.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n\t\t\t});\n\n\t\t\toptions.data = params.join('&');\n\t\t}\n\n\t\t// Here data has additional GET params\n\t\t// Object could not be send with GET method\n\t\tif (options.type === 'GET' && options.data) {\n\t\t\toptions.url += (options.url.indexOf('?') !== -1 ? '&' : '?') + options.data.replace(/%20/g, '+');\n\t\t\toptions.data = null;\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open(options.type, options.url, true);\n\n\t\txhr.setRequestHeader('Content-Type', options.contentType || 'application/x-www-form-urlencoded; charset=UTF-8');\n\t\txhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n\t\txhr.onload = function () {\n\t\t\tvar status = this.status;\n\t\t\tif (status >= 200 && status < 300 || status === 304) {\n\t\t\t\toptions.success(this.response, this);\n\t\t\t} else {\n\t\t\t\toptions.error(this);\n\t\t\t}\n\t\t};\n\n\t\txhr.send(options.data);\n\t};\n\n\t/**\n  * Run callbacks in passed collections.\n  * @method runCallbacks\n  * @param {object} collection - Callbacks collection\n  * @param {object} context - Callback context\n  * @param {array} [args] - Callback arguments\n  */\n\tthis.runCallbacks = function (collection, context, args) {\n\t\t// Normalize collection\n\t\tif (!Array.isArray(collection)) {\n\t\t\tcollection = [];\n\t\t}\n\n\t\t_moff.each(collection, function (i, callback) {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback.apply(context, args);\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * Add callbacks to view change event.\n  * @method onViewChange\n  * @param {function} callback - Callback assigned on view change\n  */\n\tthis.onViewChange = function (callback) {\n\t\tif (typeof callback !== 'function') {\n\t\t\tMoff.debug('Moff.onViewChange callback must be a function');\n\t\t\treturn;\n\t\t}\n\n\t\t_changeViewCallbacks.push(callback);\n\t};\n\n\t/**\n  * Add callback before loading content.\n  * @method beforeLoad\n  * @param {function} callback\n  */\n\tthis.beforeLoad = function (callback) {\n\t\tif (typeof callback !== 'function') {\n\t\t\tMoff.debug('Moff.beforeLoad callback must be a function');\n\t\t\treturn;\n\t\t}\n\n\t\t_beforeLoad.push(callback);\n\t};\n\n\t/**\n  * Add callback after loading content.\n  * @method afterLoad\n  * @param {function} callback\n  */\n\tthis.afterLoad = function (callback) {\n\t\tif (typeof callback !== 'function') {\n\t\t\tMoff.debug('Moff.afterLoad callback must be a function');\n\t\t\treturn;\n\t\t}\n\n\t\t_afterLoad.push(callback);\n\t};\n\n\t/**\n  * Get device view mode\n  * @method getMode\n  * @returns {string} view mode\n  */\n\tthis.getMode = function () {\n\t\tvar viewMode = 'xs';\n\n\t\tif (_matchMediaSupport) {\n\t\t\tif (_matchMedia(_mqLarge).matches) {\n\t\t\t\tviewMode = 'lg';\n\t\t\t} else if (_matchMedia(_mqMedium).matches) {\n\t\t\t\tviewMode = 'md';\n\t\t\t} else if (_matchMedia(_mqSmall).matches) {\n\t\t\t\tviewMode = 'sm';\n\t\t\t}\n\t\t}\n\n\t\treturn viewMode;\n\t};\n\n\t/**\n  * Load files and run callback.\n  * @method loadAssets\n  * @param {object} depend - Object with js and css files to be loaded\n  * @param {function} callback - Function executed after files be loaded\n  */\n\tthis.loadAssets = function (depend, callback) {\n\t\tvar loaded = 0;\n\t\tvar length = 0;\n\t\tvar jsIndex = 0;\n\t\tvar isCSS = Array.isArray(depend.css);\n\t\tvar isJS = Array.isArray(depend.js);\n\n\t\tif (isJS) {\n\t\t\tlength += depend.js.length;\n\t\t}\n\n\t\tif (isCSS) {\n\t\t\tlength += depend.css.length;\n\t\t}\n\n\t\tfunction loadJSArray() {\n\t\t\tvar src = depend.js[jsIndex];\n\n\t\t\tif (src) {\n\t\t\t\t_moff.loadJS(src, function () {\n\t\t\t\t\tjsIndex++;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === length) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloadJSArray();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tloadJSArray();\n\n\t\tfunction runCallback() {\n\t\t\tloaded++;\n\n\t\t\tif (loaded === length) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\n\t\tif (isCSS && depend.css.length) {\n\t\t\t// Load depend css files\n\t\t\tthis.each(depend.css, function (i, href) {\n\t\t\t\t_moff.loadCSS(href, runCallback);\n\t\t\t});\n\t\t}\n\n\t\tif (!length) {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\t/**\n  * Load js file and run callback on load.\n  * @method loadJS\n  * @param {string} src - Array or path of loaded files\n  * @param {function} [callback] - On load event callback\n  */\n\tthis.loadJS = function (src, callback) {\n\t\tif (typeof src !== 'string') {\n\t\t\tMoff.debug('Moff.loadJS source must be a string');\n\t\t\treturn;\n\t\t}\n\n\t\tvar script;\n\t\tvar hasCallback = typeof callback === 'function';\n\n\t\t// Load script if it is not existing on the page\n\t\tif (!_doc.querySelector('script[src=\"' + src + '\"]')) {\n\t\t\tscript = _doc.createElement('script');\n\n\t\t\tif (hasCallback) {\n\t\t\t\tscript.addEventListener('load', callback, false);\n\t\t\t}\n\n\t\t\tscript.src = src;\n\t\t\t_doc.querySelector('body').appendChild(script);\n\t\t} else if (hasCallback) {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\t/**\n  * Load css file and run callback on load.\n  * @method loadCSS\n  * @param {string} href - Array or path of loaded files\n  * @param {function} callback - On load event callback\n  */\n\tthis.loadCSS = function (href, callback) {\n\t\tif (typeof href !== 'string') {\n\t\t\tMoff.debug('Moff.loadCSS source must be a string');\n\t\t\treturn;\n\t\t}\n\n\t\tvar link;\n\t\tvar hasCallback = typeof callback === 'function';\n\n\t\t// Load link if it is not existing on the page\n\t\tif (!_doc.querySelector('link[href=\"' + href + '\"]')) {\n\t\t\tlink = _doc.createElement('link');\n\n\t\t\tif (hasCallback) {\n\t\t\t\tlink.addEventListener('load', callback, false);\n\t\t\t}\n\n\t\t\tlink.href = href;\n\t\t\tlink.setAttribute('rel', 'stylesheet');\n\t\t\t_doc.querySelector('head').appendChild(link);\n\n\t\t\tlink.onreadystatechange = function () {\n\t\t\t\tvar state = link.readyState;\n\t\t\t\tif (state === 'loaded' || state === 'complete') {\n\t\t\t\t\tlink.onreadystatechange = null;\n\n\t\t\t\t\tif (hasCallback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t} else if (hasCallback) {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\t/**\n  * Set or get Moff settings value.\n  * @method settings\n  * @param {string} key - Setting name\n  * @param {*} value - Setting value\n  * @returns {*}\n  */\n\tthis.settings = function (key, value) {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn _settings[key];\n\t\t} else {\n\t\t\t_settings[key] = value;\n\t\t}\n\t};\n\n\t/**\n  * Iterates over object or array and run callback for each iteration.\n  * @method each\n  * @param {Array|object} object - Array or object to iterate over\n  * @param {Function} callback - Iteration callback\n  */\n\tthis.each = function (object, callback) {\n\t\tvar i = 0;\n\t\tvar length = object.length;\n\t\tvar isArray = Array.isArray(object) || nodeList(object);\n\t\tvar value;\n\n\t\tif (isArray) {\n\t\t\tfor (; i < length; i++) {\n\t\t\t\tvalue = callback.call(object[i], i, object[i]);\n\n\t\t\t\tif (value === false) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i in object) {\n\t\t\t\tif (object.hasOwnProperty(i)) {\n\t\t\t\t\tvalue = callback.call(object[i], i, object[i]);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Adds callbacks for DOMContentLoaded event.\n  * If event is occurred it runs callback.\n  * @method $\n  * @param {Function} arg - Callback function\n  */\n\tthis.$ = function (callback) {\n\t\tif (typeof callback !== 'function') {\n\t\t\tthis.debug('Moff.$ argument must be a function');\n\t\t\treturn;\n\t\t}\n\n\t\tif (_domIsLoaded) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\t_domLoadedCallbacks.push(callback);\n\t\t}\n\t};\n\n\t/**\n  * Show debug notification. Removed in Moff production version.\n  * @method debug\n  * @namespace Moff\n  * @param {*} message - A debug message to display\n  */\n\tthis.debug = function (message) {\n\t\tif (window.console && window.console.log) {\n\t\t\twindow.console.log('Moff DEBUG: ' + message);\n\t\t}\n\t};\n\n\t/**\n  * Display error with stack.\n  * @method error\n  */\n\tthis.error = function () {\n\t\tError(arguments);\n\t};\n\n\t/**\n  * Moff version.\n  * @type {string}\n  */\n\tthis.version = '1.6.27';\n\n\t_doc.addEventListener('DOMContentLoaded', init, false);\n\n\t/* Test-code */\n\tthis._testonly = {\n\t\t_cache: _cache\n\t};\n\t/* End-test-code */\n}\n\nexports['default'] = Core;\nmodule.exports = exports['default'];\n\n},{}],3:[function(require,module,exports){\n/**\n * Detects OS, browser and another features support.\n * @module Detect\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction Detect() {\n\t/**\n  * @property {Window} _win - Link to Window object.\n  * @private\n  */\n\tvar _win = window;\n\n\t/**\n  * @property {Detect} _detect - Link to this object.\n  * @private\n  */\n\tvar _detect = this;\n\n\t/**\n  * @property {string} _ua - Link to user agent.\n  * @private\n  */\n\tvar _ua = window.navigator.userAgent.toLowerCase();\n\n\t/**\n  * @property {HTMLDocument} _doc - Link to document object.\n  * @private\n  */\n\tvar _doc = document;\n\n\t/**\n  * @property {{}} browser - Object with browser details.\n  */\n\tthis.browser = {};\n\n\t/**\n  * @property {{}} OS - Object with OS details.\n  */\n\tthis.OS = {};\n\n\t/**\n  * HTML5 support list.\n  * @function html5Support\n  */\n\tfunction html5Support() {\n\t\t// Determine whether browser support touch JavaScript API\n\t\t// It does not mean touch device\n\t\t_detect.touch = !!('ontouchstart' in _win || _win.DocumentTouch && _doc instanceof _win.DocumentTouch);\n\t\t_detect.applicationCache = !!_win.applicationCache;\n\t\t_detect.canvas = (function () {\n\t\t\tvar canvas = _doc.createElement('canvas');\n\t\t\treturn !!(canvas.getContext && canvas.getContext('2d'));\n\t\t})();\n\n\t\t_detect.canvasText = !!(_detect.canvas && typeof _doc.createElement('canvas').getContext('2d').fillText === 'function');\n\t\t_detect.dragAndDrop = (function () {\n\t\t\tvar div = _doc.createElement('div');\n\t\t\treturn 'draggable' in div || 'ondragstart' in div && 'ondrop' in div;\n\t\t})();\n\n\t\t_detect.hashChange = !!('onhashchange' in _win && (typeof _doc.documentMode === 'undefined' || _doc.documentMode > 7));\n\t\t_detect.history = !!(_win.history && history.pushState);\n\t\t_detect.postMessage = !!_win.postMessage;\n\t\t_detect.webSockets = !!('WebSocket' in _win || 'MozWebSocket' in _win);\n\t\t_detect.webWorkers = !!_win.Worker;\n\t\t_detect.audio = (function () {\n\t\t\tvar audio = _doc.createElement('audio');\n\t\t\tvar bool = false;\n\n\t\t\ttry {\n\t\t\t\tif (!!audio.canPlayType) {\n\t\t\t\t\tbool = {};\n\t\t\t\t\tbool.ogg = audio.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '');\n\t\t\t\t\tbool.mp3 = audio.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\t\t\t\t\tbool.wav = audio.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '');\n\t\t\t\t\tbool.m4a = (audio.canPlayType('audio/x-m4a;') || audio.canPlayType('audio/aac;')).replace(/^no$/, '');\n\t\t\t\t}\n\t\t\t} catch (error) {}\n\n\t\t\treturn bool;\n\t\t})();\n\n\t\t_detect.video = (function () {\n\t\t\tvar video = _doc.createElement('video');\n\t\t\tvar bool = false;\n\n\t\t\ttry {\n\t\t\t\tif (!!video.canPlayType) {\n\t\t\t\t\tbool = {};\n\t\t\t\t\tbool.ogg = video.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/, '');\n\t\t\t\t\tbool.h264 = video.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/, '');\n\t\t\t\t\tbool.webm = video.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/, '');\n\t\t\t\t}\n\t\t\t} catch (error) {}\n\n\t\t\treturn bool;\n\t\t})();\n\n\t\t_detect.indexedDB = (function () {\n\t\t\tvar props = ['indexedDB', 'webkitIndexedDB', 'mozIndexedDB', 'OIndexedDB', 'msIndexedDB'];\n\n\t\t\tfor (var i in props) {\n\t\t\t\tif (props.hasOwnProperty(i)) {\n\t\t\t\t\tvar item = _win[props[i]];\n\t\t\t\t\tif (item !== undefined) {\n\t\t\t\t\t\tif (item === false) {\n\t\t\t\t\t\t\treturn props[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof item === 'function') {\n\t\t\t\t\t\t\treturn item.bind(_win);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t})();\n\n\t\t_detect.localStorage = (function () {\n\t\t\ttry {\n\t\t\t\tlocalStorage.setItem(_detect.mode, _detect.mode);\n\t\t\t\tlocalStorage.removeItem(_detect.mode);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})();\n\n\t\t_detect.sessionStorage = (function () {\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem(_detect.mode, _detect.mode);\n\t\t\t\tsessionStorage.removeItem(_detect.mode);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})();\n\t}\n\n\t/**\n  * Detect browser\n  * @function detectBrowser\n  */\n\tfunction detectBrowser() {\n\t\tvar match = /(chrome)[ \\/]([\\w.]+)/.exec(_ua) || /(webkit)[ \\/]([\\w.]+)/.exec(_ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(_ua) || /(msie) ([\\w.]+)/.exec(_ua) || _ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(_ua) || [];\n\n\t\tif (match[1]) {\n\t\t\t_detect.browser[match[1]] = true;\n\t\t}\n\n\t\tif (match[2]) {\n\t\t\t_detect.browser.version = match[2];\n\t\t}\n\n\t\tif (_detect.browser.chrome) {\n\t\t\t_detect.browser.webkit = true;\n\t\t}\n\t}\n\n\t/**\n  * Detect Operating System\n  * @function detectOS\n  */\n\tfunction detectOS() {\n\t\tvar OS = _detect.OS;\n\t\tvar iOS = /(ipad|iphone|ipod)/g.test(_ua);\n\t\tvar macOS = _ua.indexOf('mac') > -1;\n\t\tvar windows = _ua.indexOf('win') > -1;\n\t\tvar android = _ua.indexOf('android') > -1;\n\t\tvar windowsPhone = _ua.indexOf('windows phone') > -1;\n\n\t\tif (iOS) {\n\t\t\tOS.iOS = iOS;\n\t\t} else if (macOS) {\n\t\t\tOS.macOS = macOS;\n\t\t} else if (windows) {\n\t\t\tOS.windows = windows;\n\t\t} else if (android) {\n\t\t\tOS.android = android;\n\t\t} else if (windowsPhone) {\n\t\t\tOS.windowsPhone = windowsPhone;\n\t\t}\n\t}\n\n\t/**\n  * Detects whether the current device is mobile\n  * @function detectMobileDevice\n  */\n\tfunction detectMobileDevice() {\n\t\t_detect.isMobile = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(_ua);\n\t}\n\n\t/**\n  * Check for CSS3 property support.\n  * @method supportCSS3\n  * @param {string} property - CSS3 property\n  * @returns {boolean}\n  */\n\tthis.supportCSS3 = function (property) {\n\t\tvar ucProp = property.charAt(0).toUpperCase() + property.slice(1);\n\t\tvar props = (property + ' ' + 'Webkit Moz O ms'.split(' ').join(ucProp + ' ') + ucProp).split(' ');\n\t\tvar length = props.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < length; i++) {\n\t\t\tproperty = props[i];\n\t\t\tif (property.indexOf('-') === -1 && document.createElement('div').style[property] !== undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tMoff.$(function () {\n\t\thtml5Support();\n\t\tdetectBrowser();\n\t\tdetectOS();\n\t\tdetectMobileDevice();\n\t});\n}\n\nexports['default'] = Detect;\nmodule.exports = exports['default'];\n\n},{}],4:[function(require,module,exports){\n/**\n * Moff Event module.\n * @module Event.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction Event() {\n\t/**\n  * @private {{}} _eventStore - Events storage.\n  * @private\n  */\n\tvar _eventStore = {};\n\n\t/**\n  * Registers new event.\n  * @method add\n  * @param {string} name - Event name\n  */\n\tthis.add = function (name) {\n\t\tif (typeof _eventStore[name] === 'undefined') {\n\t\t\t_eventStore[name] = [];\n\t\t}\n\t};\n\n\t/**\n  * Assign callback for event.\n  * @method on\n  * @param {string} name - Event name\n  * @param {function} callback - Event callback\n  */\n\tthis.on = function (name, callback) {\n\t\t// Create event if it does not exist.\n\t\tthis.add(name);\n\n\t\tif (typeof callback === 'function') {\n\t\t\t_eventStore[name].push(callback);\n\t\t}\n\t};\n\n\t/**\n  * Trigger event by name.\n  * @method trigger\n  * @param {string} name - Event name\n  */\n\tthis.trigger = function (name) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\t\tif (typeof _eventStore[name] !== 'undefined') {\n\t\t\tMoff.runCallbacks(_eventStore[name], this, args);\n\t\t}\n\t};\n\n\t/**\n  * Get event from store.\n  * @param {string} name - Event name\n  * @returns {Array|undefined}\n  */\n\tthis.get = function (name) {\n\t\treturn _eventStore[name];\n\t};\n\n\t/* Test-code */\n\tthis._testonly = {\n\t\t_eventStore: _eventStore\n\t};\n\t/* End-test-code */\n}\n\nexports['default'] = Event;\nmodule.exports = exports['default'];\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _amdSrcAmdE6 = require('../../amd/src/amd.e6');\n\nvar _amdSrcAmdE62 = _interopRequireDefault(_amdSrcAmdE6);\n\nvar _coreSrcCoreE6 = require('../../core/src/core.e6');\n\nvar _coreSrcCoreE62 = _interopRequireDefault(_coreSrcCoreE6);\n\nvar _eventSrcEventE6 = require('../../event/src/event.e6');\n\nvar _eventSrcEventE62 = _interopRequireDefault(_eventSrcEventE6);\n\nvar _detectSrcDetectE6 = require('../../detect/src/detect.e6');\n\nvar _detectSrcDetectE62 = _interopRequireDefault(_detectSrcDetectE6);\n\nvar _modulesSrcModuleBaseEs6 = require('../../modules/src/module-base.es6');\n\nvar _modulesSrcModuleBaseEs62 = _interopRequireDefault(_modulesSrcModuleBaseEs6);\n\nvar _modulesSrcModulesApiE6 = require('../../modules/src/modules-api.e6');\n\nvar _modulesSrcModulesApiE62 = _interopRequireDefault(_modulesSrcModulesApiE6);\n\nwindow.Moff = new _coreSrcCoreE62['default']();\nwindow.Moff.amd = new _amdSrcAmdE62['default']();\nwindow.Moff.event = new _eventSrcEventE62['default']();\nwindow.Moff.Module = new _modulesSrcModuleBaseEs62['default']();\nwindow.Moff.detect = new _detectSrcDetectE62['default']();\nwindow.Moff.modules = new _modulesSrcModulesApiE62['default']();\n\n},{\"../../amd/src/amd.e6\":1,\"../../core/src/core.e6\":2,\"../../detect/src/detect.e6\":3,\"../../event/src/event.e6\":4,\"../../modules/src/module-base.es6\":6,\"../../modules/src/modules-api.e6\":7}],6:[function(require,module,exports){\n/**\n * Module base class.\n * @class ModuleBase\n * @constructor\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction ModuleBase() {\n\t/**\n  * @property {null|string} scopeSelector - Module scope selector. CSS selector.\n  */\n\tthis.scopeSelector = null;\n\n\t/**\n  * @property {null|object} scope - Module scope object. HTML element.\n  */\n\tthis.scope = null;\n\n\t/**\n  * @property {Array} events - Array of module events.\n  */\n\tthis.events = [];\n\n\t/**\n  * @property {Function} beforeInit - Before initialization callback\n  */\n\tthis.beforeInit = function () {};\n\n\t/**\n  * @property {Function} init - Initialization callback\n  */\n\tthis.init = function () {};\n\n\t/**\n  * @property {Function} afterInit - After initialization callback\n  */\n\tthis.afterInit = function () {};\n\n\t/**\n  * Register module scope by scope selector.\n  * @method setScope\n  */\n\tthis.setScope = function () {\n\t\tif (this.scopeSelector) {\n\t\t\tthis.scope = document.querySelector(this.scopeSelector);\n\t\t}\n\t};\n\n\t/**\n  * Find element in module scope.\n  * @method find\n  * @param {string} selector - CSS selector.\n  * @returns {object} HTML element.\n  */\n\tthis.find = function (selector) {\n\t\treturn this.scope.querySelectorAll(selector);\n\t};\n\n\t/**\n  * Extends constructor's prototype with additional properties and functions\n  * @method reopen\n  * @param {{}} additions - Additional methods and properties\n  */\n\tthis.reopen = function (additions) {\n\t\tif (typeof additions !== 'object') {\n\t\t\tMoff.debug('Reopen method argument must be an object');\n\t\t\treturn;\n\t\t}\n\n\t\tvar obj = this;\n\t\tMoff.each(additions, function (property, value) {\n\t\t\tobj[property] = value;\n\t\t});\n\t};\n}\n\nexports['default'] = ModuleBase;\nmodule.exports = exports['default'];\n\n},{}],7:[function(require,module,exports){\n/**\n * Register and control new Moff modules.\n * @module Module.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nfunction ModulesApi() {\n\t/**\n  * @private {{}} _moduleObjectStorage - Modules storage.\n  */\n\tvar _moduleObjectStorage = {};\n\n\t/**\n  * @private {{}} _moduleClassStorage - Classes storage.\n  */\n\tvar _moduleClassStorage = {};\n\n\t/**\n  * Register module events\n  * @param {Array} events - Array of events\n  */\n\tfunction registerModuleEvents(events) {\n\t\tif (Array.isArray(events)) {\n\t\t\tMoff.each(events, function (index, event) {\n\t\t\t\tMoff.event.add(event);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n  * Creates new module class.\n  * @method create\n  * @param {string} name - module name\n  * @param {object} [depend] - object of js and css files\n  * @param {function} Constructor - constructor\n  */\n\tthis.create = function (name, depend, Constructor) {\n\t\t// Normalize arguments\n\t\tif (typeof Constructor === 'undefined') {\n\t\t\tConstructor = depend;\n\t\t\tdepend = undefined;\n\t\t}\n\n\t\t// Register new module in the storage\n\t\tConstructor.prototype = Moff.Module;\n\t\tConstructor.prototype.constructor = Constructor;\n\n\t\t// Save module in storage\n\t\tif (typeof _moduleClassStorage[name] === 'undefined') {\n\t\t\t_moduleClassStorage[name] = {\n\t\t\t\tconstructor: Constructor,\n\t\t\t\tdepend: depend\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n  * Initialize registered class\n  * @method initClass\n  * @param {string} ClassName - Name of registered class\n  * @param {object} [params] - Object with additional params\n  */\n\tthis.initClass = function (ClassName, params) {\n\t\tvar moduleObject = _moduleClassStorage[ClassName];\n\n\t\tif (!moduleObject) {\n\t\t\tMoff.debug(ClassName + ' Class is not registered');\n\t\t\treturn;\n\t\t}\n\n\t\tfunction initialize() {\n\t\t\t// Create new class object\n\t\t\tvar classObject = new moduleObject.constructor();\n\t\t\tvar storedObject = _moduleObjectStorage[ClassName];\n\n\t\t\t// Store objects in array if there are more then one classes\n\t\t\tif (Array.isArray(storedObject)) {\n\t\t\t\tstoredObject.push(classObject);\n\t\t\t} else if (typeof storedObject !== 'undefined') {\n\t\t\t\t_moduleObjectStorage[ClassName] = [storedObject, classObject];\n\t\t\t} else {\n\t\t\t\t_moduleObjectStorage[ClassName] = classObject;\n\t\t\t}\n\n\t\t\tif (typeof classObject.beforeInit === 'function') {\n\t\t\t\tclassObject.beforeInit();\n\t\t\t}\n\n\t\t\tif (params) {\n\t\t\t\t// Apply all passed data\n\t\t\t\tMoff.each(params, function (key, value) {\n\t\t\t\t\tclassObject[key] = value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add module name\n\t\t\tclassObject.moduleName = ClassName;\n\n\t\t\tif (Array.isArray(classObject.events) && classObject.events.length) {\n\t\t\t\t// Register module events.\n\t\t\t\tregisterModuleEvents(classObject.events);\n\t\t\t}\n\n\t\t\t// Set module scope\n\t\t\tclassObject.setScope();\n\n\t\t\tif (typeof classObject.init === 'function') {\n\t\t\t\tclassObject.init();\n\t\t\t}\n\n\t\t\tif (typeof classObject.afterInit === 'function') {\n\t\t\t\tclassObject.afterInit();\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tif (moduleObject.depend) {\n\t\t\t\tMoff.loadAssets(moduleObject.depend, initialize);\n\t\t\t} else {\n\t\t\t\tinitialize();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tMoff.error(error);\n\t\t}\n\t};\n\n\t/**\n  * Get registered module by name.\n  * @method get\n  * @param {string} name - module name\n  * @return {object|Array|undefined} module object or undefined\n  */\n\tthis.get = function (name) {\n\t\treturn _moduleObjectStorage.hasOwnProperty(name) && _moduleObjectStorage[name] || undefined;\n\t};\n\n\t/**\n  * Returns all modules.\n  * @method getAll\n  * @returns {{}}\n  */\n\tthis.getAll = function () {\n\t\treturn _moduleObjectStorage;\n\t};\n\n\t/**\n  * Remove registered module by name.\n  * @method remove\n  * @param {string} name - Module Class name\n  */\n\tthis.remove = function (name) {\n\t\tvar i = 0;\n\t\tvar storage = _moduleObjectStorage[name];\n\t\tvar object, length;\n\n\t\t// Be sure to remove existing module\n\t\tif (Array.isArray(storage)) {\n\t\t\tlength = storage.length;\n\n\t\t\tfor (; i < length; i++) {\n\t\t\t\tobject = storage[i];\n\n\t\t\t\tif (object.moduleName === name) {\n\t\t\t\t\tstorage.splice(i, 1);\n\t\t\t\t\tlength = storage.length;\n\t\t\t\t\t--i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (storage.length === 1) {\n\t\t\t\t_moduleObjectStorage[name] = _moduleObjectStorage[name][0];\n\t\t\t} else if (!_moduleObjectStorage[name].length) {\n\t\t\t\tdelete _moduleObjectStorage[name];\n\t\t\t}\n\t\t} else {\n\t\t\tdelete _moduleObjectStorage[name];\n\t\t}\n\t};\n\n\t/* Test-code */\n\tthis._testonly = {\n\t\t_moduleClassStorage: _moduleClassStorage,\n\t\t_moduleObjectStorage: _moduleObjectStorage\n\t};\n\t/* End-test-code */\n}\n\nexports['default'] = ModulesApi;\nmodule.exports = exports['default'];\n\n},{}]},{},[5]);\n"],"file":"moff.js","sourceRoot":"/source/"}